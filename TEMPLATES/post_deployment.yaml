#Quay Registry Install
---
apiVersion: quay.redhat.com/v1
kind: QuayRegistry
metadata:
  name: quay-registry
  namespace: openshift-operators
spec:
  components:
    - managed: true
      kind: clair
    - managed: true
      kind: postgres
    - managed: true
      kind: objectstorage
    - managed: true
      kind: redis
    - managed: true
      kind: horizontalpodautoscaler
    - managed: true
      kind: route
    - managed: true
      kind: mirror
    - managed: true
      kind: monitoring
    - managed: true
      kind: tls
#ACS Central Install
---
apiVersion: platform.stackrox.io/v1alpha1
kind: Central
metadata:
  name: stackrox-central-services
  namespace: rhacs-operator
spec:
  central:
    exposure:
      loadBalancer:
        enabled: false
        port: 443
      nodePort:
        enabled: false
      route:
        enabled: true
    persistence:
      persistentVolumeClaim:
        claimName: stackrox-db
  egress:
    connectivityPolicy: Online
  scanner:
    analyzer:
      scaling:
        autoScaling: Enabled
        maxReplicas: 5
        minReplicas: 2
        replicas: 3
    scannerComponent: Enabled
#Create Storage System for ODF
---
apiVersion: odf.openshift.io/v1alpha1
kind: StorageSystem
metadata:
  finalizers:
    - storagesystem.odf.openshift.io
  name: ocs-storagecluster-storagesystem
  namespace: openshift-storage
spec:
  kind: storagecluster.ocs.openshift.io/v1
  name: ocs-storagecluster
  namespace: openshift-storage
#Craete Storage Cluster for ODF
---
apiVersion: ocs.openshift.io/v1
kind: StorageCluster
metadata:
  annotations:
    storagesystem.odf.openshift.io/watched-by: ocs-storagecluster-storagesystem
  name: ocs-storagecluster
  namespace: openshift-storage
  ownerReferences:
    - apiVersion: odf.openshift.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: StorageSystem
      name: ocs-storagecluster-storagesystem
  finalizers:
    - storagecluster.ocs.openshift.io
spec:
  arbiter: {}
  encryption:
    kms: {}
  externalStorage: {}
  managedResources:
    cephBlockPools: {}
    cephConfig: {}
    cephDashboard: {}
    cephFilesystems: {}
    cephObjectStoreUsers: {}
    cephObjectStores: {}
  mirroring: {}
  nodeTopologies: {}
  storageDeviceSets:
    - config: {}
      resources: {}
      placement: {}
      name: ocs-deviceset-gp2
      dataPVCTemplate:
        metadata: {}
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 2Ti
          storageClassName: gp2
          volumeMode: Block
        status: {}
      count: 1
      replica: 3
      portable: true
      preparePlacement: {}
  version: 4.9.0